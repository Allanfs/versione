image: golang:latest

stages:
  - build

increment_major_version:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME = dev
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^major/
  script:
    - ./versione bump major -v $(git describe --tags --abbrev=0) > version.env
  artifacts:
    reports:
      dotenv: version.env
  
increment_minor_version:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME = dev
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/
  script:
    - ./versione bump minor -v $(git describe --tags --abbrev=0) > version.env
  artifacts:
    reports:
      dotenv: version.env

increment_patch_version:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME = dev
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^fix/
  script:
    - echo versao=${./versione bump patch -v $(git describe --tags --abbrev=0)} > version.env
  artifacts:
    reports:
      dotenv: version.env

compile:
  stage: build
  script:
    - go build -ldflags="-X 'gitlab.com/allanfs/versione/cmd.Version=$(versao)'" -o versione main.go
  artifacts:
    paths:
      - versione
